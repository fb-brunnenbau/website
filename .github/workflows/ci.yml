---
name: CI

on:
  push:
    branches-ignore:
      - dependabot/**
  pull_request:
    branches-ignore:
      - dependabot/**
  schedule:
    - cron: '0 3 * * 1' # https://crontab.guru/#0_2_*_*_1

env:
  IMAGE: fbbrunnenbau/website

permissions:
  contents: read

jobs:
  module-ci-lint:
    uses: sommerfeld-io/.github/.github/workflows/module-ci-lint.yml@main

  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  # sonar-scan:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  ci:
    runs-on: ubuntu-latest
    needs: ['module-ci-lint', 'lint-dockerfile']
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set docker tag ('ci' for main or feature branch)
        id: vars
        run: |
          echo ${{ github.ref }}

          TAG='ci'

          echo "tag = $TAG"
          echo "DOCKER_TAG=$TAG" >> $GITHUB_OUTPUT
        shell: bash
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   if: ${{ github.actor != 'dependabot[bot]' }}
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USER }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker image build
        uses: docker/build-push-action@v4
        with:
          context: ./
          platforms: linux/amd64
          # push: ${{ github.actor != 'dependabot[bot]' }}
          push: false
          tags: ${{ env.IMAGE }}:${{ steps.vars.outputs.DOCKER_TAG }}

  on-failure:
    runs-on: ubuntu-latest
    needs: ['module-ci-lint', 'lint-dockerfile', 'ci']
    if: failure()

    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
